apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
buildscript {
    repositories {
        jcenter()
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    //support
    compile(rootProject.ext.dependencies["support-v4"]) {
        exclude module: 'support-annotations'
    }
    compile(rootProject.ext.dependencies["appcompat-v7"]) {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
    }
    compile(rootProject.ext.dependencies["cardview-v7"]) {
        exclude module: 'support-annotations'
    }
    compile(rootProject.ext.dependencies["design"]) {
        exclude module: 'support-annotations'
    }
    compile rootProject.ext.dependencies["annotations"]
    compile rootProject.ext.dependencies["constraint"]
    //view
    compile(rootProject.ext.dependencies["autolayout"]) {
        exclude group: 'com.android.support'
    }
    compile(rootProject.ext.dependencies["butterknife"]) {
        exclude module: 'support-annotations'
    }
    //rx
    compile rootProject.ext.dependencies["rxjava2"]
    compile(rootProject.ext.dependencies["rxandroid2"]) {
        exclude module: 'rxjava'
    }
    compile(rootProject.ext.dependencies["rxlifecycle2"]) {
        exclude module: 'rxjava'
    }
    compile(rootProject.ext.dependencies["rxlifecycle2-components"]) {
        exclude module: 'support-v4'
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
        exclude module: 'rxjava'
        exclude module: 'rxandroid'
    }
    compile rootProject.ext.dependencies["rxpermissions2"]
    compile(rootProject.ext.dependencies['rxerrorhandler2']) {
        exclude module: 'rxjava'
    }
    //network
    compile(rootProject.ext.dependencies["retrofit"]) {
        exclude module: 'okhttp'
    }
    compile(rootProject.ext.dependencies["retrofit-converter-gson"]) {
        exclude module: 'gson'
    }
    compile(rootProject.ext.dependencies["retrofit-adapter-rxjava2"]) {
        exclude module: 'rxjava'
    }
    compile rootProject.ext.dependencies["okhttp3"]
    compile rootProject.ext.dependencies["glide"]
    //tools
    provided rootProject.ext.dependencies["javax.annotation"]
    compile rootProject.ext.dependencies["dagger2"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    compile rootProject.ext.dependencies["gson"]
    compile rootProject.ext.dependencies["icepick"]
    compile rootProject.ext.dependencies["nucleus5"]
    provided rootProject.ext.dependencies["icepickâ€”provided"]
    //test
    compile rootProject.ext.dependencies["timber"]
    compile rootProject.ext.dependencies["eventbus"]
}
